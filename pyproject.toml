[build-system]
requires = ["setuptools >= 64.0.0", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {""= "src"}

# We use setuptools_scm to manage the EyeLinkIO version number
[tool.setuptools_scm]

[project]
name = "eyelinkio"
description = "A lightweight library for reading Eyelink Data Format files in Python."
maintainers = [{ name = "Scott Huberty", email = "seh33@uw.edu" }]
readme = "README.md"
requires-python = ">=3.9"
dynamic = ["version"]
keywords = [
    "neuroscience",
    "eyelink",
    "eyetracking",
    "SR Research",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "numpy>=1.21.2"
]

[project.optional-dependencies]

# Dependencies for running the test infrastructure
test = [
    "pytest>=8.0.0rc2",
    "pytest-cov",
    "pytest-timeout",
    "ruff",
    "numpydoc",
    "codespell",
    "tomli; python_version<'3.11'",
]

# Dependencies for building the documentation
doc = [
    "sphinx>=6",
    "numpydoc",
    "pydata_sphinx_theme",
    "sphinxemoji",
    "sphinxcontrib-towncrier",
]

full = ["pandas", "mne"]
build = [
  'build',
  'twine',
]
dev = ["eyelinkio[test,doc,build,full]"]

[project.urls]
Homepage = "https://scott-huberty.github.io/eyelinkio/"
Download = "https://pypi.org/project/eyelinkio/#files"
"Bug Tracker" = "https://github.com/scott-huberty/eyelinkio/issues"
Documentation = "https://scott-huberty.github.io/eyelinkio/"
"Source Code" = "https://github.com/scott-huberty/eyelinkio"

[tool.codespell]
ignore-words = "ignore_words.txt"
builtin = "clear,rare,informal,names,usage"

[tool.ruff]
exclude = ["__init__.py"]

[tool.ruff.lint]
select = ["A", "B006", "D", "E", "F", "I", "W", "UP"]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D413", # Missing blank line after last section
    "UP031", # Use format specifiers instead of percent format
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
ignore-decorators = [
    "property",
    "setter",
]

[tool.ruff.lint.per-file-ignores]
"examples/*/*.py" = [
    "D205", # 1 blank line required between summary line and description
]

[tool.pytest.ini_options]
# -r f (failed), E (error), s (skipped), x (xfail), X (xpassed), w (warnings)
# don't put in xfail for pytest 8.0+ because then it prints the tracebacks,
# which look like real errors
addopts = """--durations=20 --doctest-modules -rfEXs \
    --doctest-ignore-import-errors --junit-xml=junit-results.xml \
    --ignore=doc --ignore=logo --ignore=examples --ignore=tutorials \
    --ignore=mne/gui/_*.py --ignore=mne/icons --ignore=tools \
    --ignore=mne/report/js_and_css \
    --color=yes --capture=sys"""
junit_family = "xunit2"

[tool.towncrier]
package = "eyelinkio"
directory = "docs/changes/devel/"
filename = "docs/changes/devel.rst"
title_format = "{version} ({project_date})"
issue_format = "`#{issue} <https://github.com/scott-huberty/eyelinkio/pulls/{issue}>`__"

[[tool.towncrier.type]]
directory = "notable"
name = "Notable changes"
showcontent = true

[[tool.towncrier.type]]
directory = "dependency"
name = "Dependencies"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "apichange"
name = "API changes by deprecation"
showcontent = true

[[tool.towncrier.type]]
directory = "newfeature"
name = "New features"
showcontent = true

[[tool.towncrier.type]]
directory = "other"
name = "Other changes"
showcontent = true
